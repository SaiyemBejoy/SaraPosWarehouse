@using PosWarehouse.ViewModel
@model PosWarehouse.ViewModel.MenuSetUpModel
@{
    ViewBag.Title = "Menu";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var menuModel = ViewBag.MenuList as List<MenuSetUpModel>;
}

<div class="page-head">
    <div class="page-title">
        <h1>Manage Menu</h1>
    </div>
</div>

<div class="row margin-top-10">
    <div class="col-md-12">
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Add Menu
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse" data-original-title="" title="">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                @using (Html.BeginForm("SaveAndUpdateMenu", "MenuSetUp", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                @Html.AntiForgeryToken()
                <div class="form-body">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(m => m.MenuName, new { @class = "col-md-3 control-label" })
                        <div class="col-md-6">
                            <div class="input-icon">
                                <i class="fa fa-text-width"></i>
                                @Html.TextBoxFor(m => m.MenuName, new { @class = "form-control input-circle", @placeholder = "Menu Name", @id = "menuName", @style = "max-width: 580px;" })
                                @Html.ValidationMessageFor(m => m.MenuName)
                            </div>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MenuURL, new { @class = "col-md-3 control-label" })
                        <div class="col-md-6">
                            <div class="input-icon">
                                <i class="fa fa-text-width"></i>
                                @Html.TextBoxFor(m => m.MenuURL, new { @class = "form-control input-circle", @placeholder = "Menu URL", @id = "menuURL", @style = "max-width: 580px;" })
                                @Html.ValidationMessageFor(m => m.MenuURL)
                            </div>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MenuIcon, new { @class = "col-md-3 control-label" })
                        <div class="col-md-6">
                            <div class="input-icon">
                                <i class="fa fa-text-width"></i>
                                @Html.TextBoxFor(m => m.MenuIcon, new { @class = "form-control input-circle", @placeholder = "Menu Icon", @id = "menuIcon", @style = "max-width: 580px;" })
                                @Html.ValidationMessageFor(m => m.MenuIcon)
                            </div>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.MenuOrder, new { @class = "col-md-3 control-label" })
                        <div class="col-md-6">
                            <div class="input-icon">
                                <i class="fa fa-text-width"></i>
                                @Html.TextBoxFor(m => m.MenuOrder, new { @class = "form-control input-circle", @readonly = "readonly", @Value = ViewBag.MaxOrderNumber, @*@placeholder = "Menu Order",*@ @id = "menuOrder", @style = "max-width: 580px;" })
                                @Html.ValidationMessageFor(m => m.MenuOrder)
                            </div>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ActiveStatus, new { @class = "col-md-3 control-label" })
                        <div class="col-md-6">
                            <div class="checkbox-list" style="margin-top: 8px;">

                                @Html.CheckBoxFor(m => m.ActiveStatus, new { @class = "checker" })

                            </div>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3"></div>
                        <div class="col-md-6 text-left">
                            @Html.HiddenFor(m => m.MenuId)
                            <button class="btn btn-success" type="submit"><i class="fa fa-save"></i> Save</button>
                            @*<button class="btn btn-success" type="submit" id="clear"><i class="fa fa-save"></i> clear2</button>*@
                            <a class="btn btn-danger" href="@Url.Action("Index", "MenuSetUp")"><i class="fa fa-cut"></i> Clear</a>
                        </div>
                        <div class="col-md-3"></div>
                    </div>
                </div>
                }

            </div>

        </div>


        <div class="portlet box blue-madison">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-gift"></i>Menu Lists
                </div>
                <div class="tools">
                    <a href="javascript:;" class="collapse" data-original-title="" title="">
                    </a>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="menuTable">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Menu Name</th>
                                <th>URL</th>
                                <th>Icon</th>
                                <th>Menu Order</th>
                                <th class="text-center" style="width: 20%">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (menuModel != null && menuModel.Count != 0)
                            {
                                int counter = 1;
                                foreach (var data in menuModel)
                                {
                            <tr>
                                <td>@counter</td>
                                <td>@data.MenuName</td>
                                <td>@data.MenuURL</td>
                                <td>@data.MenuIcon</td>
                                <td>@data.MenuOrder</td>
                                <td class="text-center">
                                    @Html.ActionLink("Edit", "Index", "MenuSetUp", new { menuId = data.MenuId }, new { @class = "btn btn-primary fa fa-edit btn-xs" }) ||
                                    @Html.ActionLink(" Delete", "DeleteMenu", "MenuSetUp", new { menuId = data.MenuId }, new { @class = "btn btn-danger fa fa-trash-o btn-xs" })
                                </td>
                            </tr>
                                    counter = counter + 1;
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

@*@section scripts
    {*@
<script>
    jQuery(document).ready(function () {
    

            var table = $("#menuTable").dataTable();

            @{
                if (!string.IsNullOrWhiteSpace(@ViewBag.Message))
                {
                    <text>
                        var message = '@ViewBag.message';


                        toastr.options = {
                            "closeButton": true,
                            "debug": false,
                            "positionClass": "toast-top-center",
                            "onclick": null,
                            "showDuration": "1000",
                            "hideDuration": "1000",
                            "timeOut": "1000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        toastr.success(message);
                    </text>
                }
            }
        });

</script>
@*}*@